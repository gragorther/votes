name: Build, Push & Release

on:
  push:
    branches: [ main ]
    paths:   [ 'backend/**' ]

env:
  REGISTRY:   ghcr.io
  IMAGE_NAME: you/your-backend

jobs:
  build-push-release:
    runs-on: ubuntu-latest

    permissions:
      contents:     read
      packages:     write
      id-token:     write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # 1) Semver from your Git tag, e.g. v1.2.3
            type=semver,pattern={{version}}
            # 2) Always emit "stable" on every run
            type=raw,value=stable

      - name: Build & push Docker image
        id: push
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags:   ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name:  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:     ${{ steps.meta.outputs.version }}
          release_name: ${{ steps.meta.outputs.version }}
          draft:        false
          prerelease:   false
